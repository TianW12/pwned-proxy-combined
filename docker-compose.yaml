services:
  backend:
    build:
      context: ./pwned-proxy-backend
      dockerfile: Dockerfile
    env_file:
      - ./pwned-proxy-backend/.env
    depends_on:
      - db
    ports:
      # Host‑only access
      - "127.0.0.1:8000:8000"
    networks:
      - private   # talk to Postgres
      - public    # talk to frontend / Internet
    restart: unless-stopped

  frontend:
    build:
      context: ./pwned-proxy-frontend/app-main
      dockerfile: Dockerfile
    env_file:
      - ./pwned-proxy-frontend/app-main/.env.local
    depends_on:
      - backend
    ports:
      # Host‑only access
      - "127.0.0.1:3000:3000"
    networks:
      - public    # talk to backend / Internet
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    env_file:
      - ./pwned-proxy-backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - private   # only backend can see this
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  # Isolated; unreachable from the host or other networks
  private:
    internal: true
  # Ordinary bridge; containers on it can reach one another and the Internet
  public:
